/*
 * Copyright (c) 2020 Kagen Aeby (kikokeyco)
 *
 * SPDX-License-Identifier: MIT
 */

/dts-v1/;
#include <nordic/nrf52840_qiaa.dtsi>
#include <dt-bindings/zmk/matrix_transform.h>
/ {
	model = "Hele";
	compatible = "Hele", "Hele";

	chosen {
		zephyr,code-partition = &code_partition;
		zephyr,sram = &sram0;
		zephyr,flash = &flash0;
		zmk,kscan = &kscan0;
		zmk,matrix_transform = &default_transform;
	};

	vbatt {
		compatible = "zmk,battery-voltage-divider";
		label = "BATTERY";
		io-channels = <&adc 3>;
		output-ohms = <2000000>;
		full-ohms = <(1000000 + 2000000)>;
	};


	default_transform: keymap_transform_0 {
		compatible = "zmk,matrix-transform";
		columns = <15>;
		rows = <5>;
		map = <
RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5) RC(0,6) RC(0,7) RC(0,8) RC(0,9) RC(0,10) RC(0,11) RC(0,12) RC(0,13) RC(0,14)
RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5) RC(1,6) RC(1,7) RC(1,8) RC(1,9) RC(1,10) RC(1,11) RC(1,12) RC(1,13) RC(1,14)
RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5) RC(2,6) RC(2,7) RC(2,8) RC(2,9) RC(2,10) RC(2,11)  RC(2,13) RC(2,14)
RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4) RC(3,5) RC(3,6) RC(3,7) RC(3,8) RC(3,9) RC(3,10) RC(3,11)  RC(3,13) RC(3,14) 
RC(4,0) RC(4,1) RC(4,2)  RC(4,5)  RC(4,9) RC(4,10) RC(4,11)  RC(4,13) RC(4,14)  
		>;
	};
	kscan0: kscan {
		compatible = "zmk,kscan-gpio-matrix";
		label = "KSCAN";

		diode-direction = "col2row";
		row-gpios
			= <&gpio0 23 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			, <&gpio1 15 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			, <&gpio0 3 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			, <&gpio0 21 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			, <&gpio1 10 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			;
		col-gpios
			= <&gpio0 02 GPIO_ACTIVE_HIGH>
			, <&gpio0 28 GPIO_ACTIVE_HIGH>
			, <&gpio0 29 GPIO_ACTIVE_HIGH>
			, <&gpio0 30 GPIO_ACTIVE_HIGH>
			, <&gpio0 31 GPIO_ACTIVE_HIGH>
			, <&gpio1 13 GPIO_ACTIVE_HIGH>
			, <&gpio0 12 GPIO_ACTIVE_HIGH>
			, <&gpio0 19 GPIO_ACTIVE_HIGH>
			, <&gpio0 22 GPIO_ACTIVE_HIGH>
			, <&gpio1 00 GPIO_ACTIVE_HIGH>
			, <&gpio1 03 GPIO_ACTIVE_HIGH>
			, <&gpio1 01 GPIO_ACTIVE_HIGH>
			, <&gpio1 02 GPIO_ACTIVE_HIGH>
			, <&gpio1 06 GPIO_ACTIVE_HIGH>
			, <&gpio1 04 GPIO_ACTIVE_HIGH>
			;
	};
	leds {
		compatible = "gpio-leds";
		led_0: led_blue {
			gpios = <&gpio0 04 GPIO_ACTIVE_HIGH>;
			label = "Blue LED";
			status = "okay";
		};
		led_1: led_caps {
			gpios = <&gpio1 9 GPIO_ACTIVE_HIGH>;
			label = "Caps LED";
			status = "okay";
		};
	};
	pwmleds {
		compatible = "pwm-leds";
		pwm_led_0: pwm_led_Caps {
			pwms = <&pwm1 9>;
			label = "Caps PWM LED";
			status = "okay";
		};
};
	aliases {
		led0 = &led_0;
		led1   = &led_1;
		pwmledcaps = &pwm_led_0;
		
	};
};
&gpio0 {
	status = "okay";
};

&gpio1 {
	status = "okay";
};

&gpiote {
	status = "okay";
};

&adc {
	status = "okay";
};

&usbd {
	status = "okay";
};

&spi0 {
	// Underglow data: P0.31 
  compatible = "nordic,nrf-spim";
  status = "okay";
  mosi-pin = <31>;
  // Unused pins, needed for SPI definition, but not used by the ws2812 driver itself.
  sck-pin = <6>;
  miso-pin = <8>;

  led_strip: ws2812@0 {
    compatible = "worldsemi,ws2812-spi";
    label = "WS2812";

    /* SPI */
    reg = <0>; /* ignored, but necessary for SPI bindings */
    spi-max-frequency = <4000000>;

    /* WS2812 */
    chain-length = <16>; /* number of LEDs */
    spi-one-frame = <0x70>;
    spi-zero-frame = <0x40>;
  };
};


&flash0 {
	/*
	 * For more information, see:
	 * http://docs.zephyrproject.org/latest/devices/dts/flash_partitions.html
	 */
	partitions {
		compatible = "fixed-partitions";
		#address-cells = <1>;
		#size-cells = <1>;

		sd_partition: partition@0 {
			label = "softdevice";
			reg = <0x00000000 0x00026000>;
		};
		code_partition: partition@26000 {
			label = "code_partition";
			reg = <0x00026000 0x000c6000>;
		};

		/*
		 * The flash starting at 0x000ec000 and ending at
		 * 0x000f3fff is reserved for use by the application.
		 */

		/*
		 * Storage partition will be used by FCB/LittleFS/NVS
		 * if enabled.
		 */
		storage_partition: partition@ec000 {
			label = "storage";
			reg = <0x000ec000 0x00008000>;
		};

		boot_partition: partition@f4000 {
			label = "adafruit_boot";
			reg = <0x000f4000 0x0000c000>;
		};
	};
};